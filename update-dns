#!/bin/sh
################################################################################
# update-dns - Shell script to update a dns hostname, when an IP address changes
# Copyright (C) 2013-2014  Daniel Lintott <daniel@serverb.co.uk>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
################################################################################

# Configuration
host="home"
zone="example.com"
server="127.0.0.1"
site="http://myip.dnsomatic.com"
keyfile="/etc/update-dns/key.conf"

PROG=update-dns
VERS=0.3

IP="$(curl -fs $site)"
RETVAL=$?

if [ $RETVAL -ne 0 ]; then
	logger -s -p "user.err" -t $PROG "Failed to get external IP from $site"
	exit 1;
fi

OLDIP="$(host -t A $host.$zone | cut -d ' ' -f 4)"
RETVAL=$?

if [ $RETVAL -ne 0 ]; then
	logger -s -p "user.err" -t $PROG "Failed to get old IP address"
	exit 1;
fi

if [ $OLDIP == $IP ]; then
	logger -s -p "user.info" -t $PROG "No change in IP Address $IP nothing to update"
	exit;
fi

TMP="$(mktemp)"

printf "server $server\nzone $zone\nupdate delete $host.$zone A\nupdate add $host.$zone 3600 A $IP\nsend" > $TMP

NSUPDPRG=$(type -p nsupdate)
RETVAL=$?

if [ $RETVAL -ne 0 ]; then
    logger -s -p "user.err" -t $PROG "Unable to find nsupdate on your path"
    exit 1;
fi

$NSUPDPRG -k $keyfile $TMP
RETVAL=$?

if [ $RETVAL -eq 0 ]; then
	logger -s -p "user.info" -t $PROG "Successful update of IP Address $IP"
else
	logger -s -p "user.err" -t $PROG "Updating DNS failed"
	exit 1;
fi

rm $TMP
